{"ast":null,"code":"export function getQuickSortAnimations(items) {\n  const animations = [];\n  if (items.length <= 1) return animations;\n  quickSort(items, 0, items.length - 1, animations);\n  return animations;\n}\n\nfunction swap(items, leftIndex, rightIndex) {\n  var temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n}\n\nfunction partition(items, left, right, animations) {\n  var pivot = items[right],\n      i = left,\n      j = right;\n  var ptr = left; //animations.push([-1,right,2]);\n  //animations.push([-1,right,2]);\n  //animations.push([-1,right,2]);\n\n  while (i < right) {\n    if (items[i] < pivot) {\n      animations.push([i, ptr, 0]);\n      animations.push([i, ptr, 0]);\n      animations.push([i, ptr, 0]);\n      swap(items, i, ptr);\n      ptr++;\n    }\n\n    i++;\n  }\n\n  animations.push([ptr, right, 1]);\n  animations.push([ptr, right, 1]);\n  animations.push([ptr, right, 1]);\n  swap(items, ptr, right);\n  return ptr;\n}\n\nfunction quickSort(items, left, right, animations) {\n  if (left > right) {\n    return;\n  }\n\n  var index = partition(items, left, right, animations);\n  quickSort(items, left, index - 1, animations);\n  quickSort(items, index + 1, right, animations);\n}","map":{"version":3,"sources":["/home/arshdeep/sorting-vis/src/sortingAlgorithms/quickSort.js"],"names":["getQuickSortAnimations","items","animations","length","quickSort","swap","leftIndex","rightIndex","temp","partition","left","right","pivot","i","j","ptr","push","index"],"mappings":"AAAA,OAAO,SAASA,sBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOD,UAAP;AACvBE,EAAAA,SAAS,CAACH,KAAD,EAAO,CAAP,EAASA,KAAK,CAACE,MAAN,GAAa,CAAtB,EAAwBD,UAAxB,CAAT;AAEA,SAAOA,UAAP;AAED;;AAED,SAASG,IAAT,CAAcJ,KAAd,EAAqBK,SAArB,EAAgCC,UAAhC,EAA2C;AACvC,MAAIC,IAAI,GAAGP,KAAK,CAACK,SAAD,CAAhB;AACAL,EAAAA,KAAK,CAACK,SAAD,CAAL,GAAmBL,KAAK,CAACM,UAAD,CAAxB;AACAN,EAAAA,KAAK,CAACM,UAAD,CAAL,GAAoBC,IAApB;AACH;;AACD,SAASC,SAAT,CAAmBR,KAAnB,EAA0BS,IAA1B,EAAgCC,KAAhC,EAAsCT,UAAtC,EAAkD;AAC9C,MAAIU,KAAK,GAAGX,KAAK,CAACU,KAAD,CAAjB;AAAA,MAA0BE,CAAC,GAAGH,IAA9B;AAAA,MAAoCI,CAAC,GAAGH,KAAxC;AACA,MAAII,GAAG,GAACL,IAAR,CAF8C,CAI9C;AACA;AACA;;AAEA,SAAOG,CAAC,GAAEF,KAAV,EAAiB;AACb,QAAGV,KAAK,CAACY,CAAD,CAAL,GAASD,KAAZ,EACA;AACIV,MAAAA,UAAU,CAACc,IAAX,CAAgB,CAACH,CAAD,EAAGE,GAAH,EAAO,CAAP,CAAhB;AACAb,MAAAA,UAAU,CAACc,IAAX,CAAgB,CAACH,CAAD,EAAGE,GAAH,EAAO,CAAP,CAAhB;AACAb,MAAAA,UAAU,CAACc,IAAX,CAAgB,CAACH,CAAD,EAAGE,GAAH,EAAO,CAAP,CAAhB;AACAV,MAAAA,IAAI,CAACJ,KAAD,EAAOY,CAAP,EAASE,GAAT,CAAJ;AAAmBA,MAAAA,GAAG;AAEzB;;AACDF,IAAAA,CAAC;AACJ;;AACDX,EAAAA,UAAU,CAACc,IAAX,CAAgB,CAACD,GAAD,EAAKJ,KAAL,EAAW,CAAX,CAAhB;AACAT,EAAAA,UAAU,CAACc,IAAX,CAAgB,CAACD,GAAD,EAAKJ,KAAL,EAAW,CAAX,CAAhB;AACAT,EAAAA,UAAU,CAACc,IAAX,CAAgB,CAACD,GAAD,EAAKJ,KAAL,EAAW,CAAX,CAAhB;AACAN,EAAAA,IAAI,CAACJ,KAAD,EAAOc,GAAP,EAAWJ,KAAX,CAAJ;AACA,SAAOI,GAAP;AACH;;AAED,SAASX,SAAT,CAAmBH,KAAnB,EAA0BS,IAA1B,EAAgCC,KAAhC,EAAsCT,UAAtC,EAAkD;AAE9C,MAAGQ,IAAI,GAACC,KAAR,EAAc;AAAE;AAAS;;AACzB,MAAIM,KAAK,GAAGR,SAAS,CAACR,KAAD,EAAQS,IAAR,EAAcC,KAAd,EAAoBT,UAApB,CAArB;AACAE,EAAAA,SAAS,CAACH,KAAD,EAAQS,IAAR,EAAcO,KAAK,GAAG,CAAtB,EAAwBf,UAAxB,CAAT;AACAE,EAAAA,SAAS,CAACH,KAAD,EAAQgB,KAAK,GAAC,CAAd,EAAiBN,KAAjB,EAAuBT,UAAvB,CAAT;AACH","sourcesContent":["export function getQuickSortAnimations(items) {\n  const animations = [];\n  if (items.length <= 1) return animations;\n  quickSort(items,0,items.length-1,animations);\n\n  return animations;\n  \n} \n\nfunction swap(items, leftIndex, rightIndex){\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\nfunction partition(items, left, right,animations) {\n    var pivot = items[right], i = left, j = right;\n    var ptr=left; \n\n    //animations.push([-1,right,2]);\n    //animations.push([-1,right,2]);\n    //animations.push([-1,right,2]);\n\n    while (i <right) {\n        if(items[i]<pivot)\n        { \n            animations.push([i,ptr,0]);\n            animations.push([i,ptr,0]);\n            animations.push([i,ptr,0]);\n            swap(items,i,ptr); ptr++; \n\n        }\n        i++;\n    }\n    animations.push([ptr,right,1]);\n    animations.push([ptr,right,1]);\n    animations.push([ptr,right,1]);\n    swap(items,ptr,right)\n    return ptr;\n}\n\nfunction quickSort(items, left, right,animations) {\n\n    if(left>right){ return; }\n    var index = partition(items, left, right,animations);\n    quickSort(items, left, index - 1,animations);\n    quickSort(items, index+1, right,animations);   \n}\n"]},"metadata":{},"sourceType":"module"}