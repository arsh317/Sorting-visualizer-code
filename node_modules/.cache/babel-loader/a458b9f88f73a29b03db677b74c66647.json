{"ast":null,"code":"export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return animations;\n  quickSort(array, 0, array.length - 1);\n  return animations;\n}\n\nfunction swap(items, leftIndex, rightIndex) {\n  var temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n}\n\nfunction partition(items, left, right) {\n  var pivot = items[right],\n      i = left,\n      j = right;\n  var ptr = left;\n\n  while (i < right) {\n    if (items[i] < pivot) {\n      swap(itmes, i, ptr);\n      ptr++;\n    }\n\n    i++;\n  }\n\n  swap(items, ptr, right);\n  return ptr;\n}\n\nfunction quickSort(items, left, right) {\n  if (left >= right) {\n    return;\n  }\n\n  var index = partition(items, left, right);\n  quickSort(items, left, index - 1);\n  quickSort(items, index, right);\n}","map":{"version":3,"sources":["/home/arshdeep/sorting-vis/src/sortingAlgorithms/quickSort.js"],"names":["getQuickSortAnimations","array","animations","length","quickSort","swap","items","leftIndex","rightIndex","temp","partition","left","right","pivot","i","j","ptr","itmes","index"],"mappings":"AAAA,OAAO,SAASA,sBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOD,UAAP;AACvBE,EAAAA,SAAS,CAACH,KAAD,EAAO,CAAP,EAASA,KAAK,CAACE,MAAN,GAAa,CAAtB,CAAT;AAEA,SAAOD,UAAP;AAED;;AAED,SAASG,IAAT,CAAcC,KAAd,EAAqBC,SAArB,EAAgCC,UAAhC,EAA2C;AACvC,MAAIC,IAAI,GAAGH,KAAK,CAACC,SAAD,CAAhB;AACAD,EAAAA,KAAK,CAACC,SAAD,CAAL,GAAmBD,KAAK,CAACE,UAAD,CAAxB;AACAF,EAAAA,KAAK,CAACE,UAAD,CAAL,GAAoBC,IAApB;AACH;;AACD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0BK,IAA1B,EAAgCC,KAAhC,EAAuC;AACnC,MAAIC,KAAK,GAAGP,KAAK,CAACM,KAAD,CAAjB;AAAA,MAA0BE,CAAC,GAAGH,IAA9B;AAAA,MAAoCI,CAAC,GAAGH,KAAxC;AACA,MAAII,GAAG,GAACL,IAAR;;AAEA,SAAOG,CAAC,GAAEF,KAAV,EAAiB;AACb,QAAGN,KAAK,CAACQ,CAAD,CAAL,GAASD,KAAZ,EAAkB;AAAER,MAAAA,IAAI,CAACY,KAAD,EAAOH,CAAP,EAASE,GAAT,CAAJ;AAAmBA,MAAAA,GAAG;AAAM;;AAChDF,IAAAA,CAAC;AACJ;;AACDT,EAAAA,IAAI,CAACC,KAAD,EAAOU,GAAP,EAAWJ,KAAX,CAAJ;AACA,SAAOI,GAAP;AACH;;AAED,SAASZ,SAAT,CAAmBE,KAAnB,EAA0BK,IAA1B,EAAgCC,KAAhC,EAAuC;AAEnC,MAAGD,IAAI,IAAEC,KAAT,EAAe;AAAE;AAAS;;AAC1B,MAAIM,KAAK,GAAGR,SAAS,CAACJ,KAAD,EAAQK,IAAR,EAAcC,KAAd,CAArB;AACAR,EAAAA,SAAS,CAACE,KAAD,EAAQK,IAAR,EAAcO,KAAK,GAAG,CAAtB,CAAT;AACAd,EAAAA,SAAS,CAACE,KAAD,EAAQY,KAAR,EAAeN,KAAf,CAAT;AACH","sourcesContent":["export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return animations;\n  quickSort(array,0,array.length-1);\n\n  return animations;\n  \n} \n\nfunction swap(items, leftIndex, rightIndex){\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\nfunction partition(items, left, right) {\n    var pivot = items[right], i = left, j = right;\n    var ptr=left; \n\n    while (i <right) {\n        if(items[i]<pivot){ swap(itmes,i,ptr); ptr++;  }\n        i++;\n    }\n    swap(items,ptr,right)\n    return ptr;\n}\n\nfunction quickSort(items, left, right) {\n\n    if(left>=right){ return; }\n    var index = partition(items, left, right);\n    quickSort(items, left, index - 1);\n    quickSort(items, index, right);   \n}\n"]},"metadata":{},"sourceType":"module"}